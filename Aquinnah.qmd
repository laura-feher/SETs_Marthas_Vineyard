---
title: "Aquinnah SETs"
subtitle: "Produced for Martha’s Vineyard Commission" 
date: "`r Sys.Date()`"
author:
  - name: Laura Feher
    affiliations: 
    - name: NPS NCBN I&M Network
format: html
toc: true 
code-fold: true
code-overflow: wrap
embed-resources: true
editor: visual
---

```{r Load packages}
#| message: false
#| warning: false
#| include: false

library(tidyverse)
library(readxl)
library(stringr)
library(mgcv)
library(gratia)
```

## 1. Get measurement dates

```{r Get measurement dates}
#| message: false
#| warning: false

# Get measurement dates from the first row of the excel sheets
aq_dates <- map(
  seq(1, 3, by = 1),
  ~
    read_xlsx(
      here::here("data", "Aquinnah 2025-6-3.xlsx"),
      sheet = paste0("Sheet", .x),
      n_max = 1
    ) %>%
    pivot_longer(., cols = everything()) %>%
    filter(str_detect(str_to_sentence(value), "Measure")) %>%
    mutate(date_num = str_sub(name, 1, 5)) %>%
    pluck("date_num")
) %>%
  set_names(., c("GH-W", "GH-M", "GH-E"))
```

## 2. Load and transform pin heights

```{r}
#| message: false
#| warning: false

# Load and transform pin height data for each of the stations
aq_data <- map(
  seq(1, 3, by = 1),
  ~ read_xlsx( # load sheets 1-3
    here::here("data", "Aquinnah 2025-6-3.xlsx"),
    sheet = paste0("Sheet", .x),
    skip = 1, # skip first row
    n_max = 38 # ignore last rows with totals
  ) %>%
    select(-c(1)) %>%
    select(starts_with("Hole") | starts_with("Measure")) # select the pin position (aka Hole) and pin height columns
) %>%
  set_names(., c("GH-W", "GH-M", "GH-E")) %>% # set the station names
  map2(., aq_dates, ~ set_names(., c("pin_position", .y))) %>% # set the name of the pin position column to 'pin_position` and set the names of the pin height columns to their respective dates
  map( # fill in the SET arm direction column
    .,
    ~ .x %>%
      drop_na(.) %>%
      mutate(direction = c( 
        rep("a", 9), rep("b", 9), rep("c", 9), rep("d", 9)
      ))
    %>%
      pivot_longer( # pivot the pin position and pin height columns into long format
        .,
        cols = -c(pin_position, direction),
        names_to = "date",
        values_to = "pin_height"
      ) %>%
      mutate(
        pin_position = as.character(pin_position),
        date = as.Date(as.numeric(date), format = "%Y-%m-%d", origin = "1899-12-30"), # convert date numbers to date format
        pin_height = pin_height * 10, # convert to mm
        site = "Aquinnah" # set site name
      )
  ) %>%
  map2(., # create a column with the station name 
       names(.), 
       ~ .x %>% mutate(station = .y)) %>%
  map(., # re-arrange columns
      ~ .x %>%
        select(site, station, direction, pin_position, date, pin_height))
```

## 3. Visual for QAQC of raw pin heights

First I did a quick plot of the raw pin height data as a visual gut-check to make sure all the values look reasonable.

::: callout-caution
NOTE: It looks the directions L1-E (arm A) and R5-W (arm B) got switched at GH-E on 6/4/2021? Probably just a data entry error but may want to go back to the field data sheets and check.
:::

```{r}
#| message: false
#| warning: false

# quick plot for a visual gut-check to make sure all pin height values look reasonable

aq_data %>%
  map2(., names(.), ~ .x %>%
        mutate(direction_name = paste0("Arm: ", direction)) %>%
        ggplot(., aes(x = date, y = pin_height)) +
        geom_point(aes(color = pin_position)) +
        facet_wrap(~direction_name) +
        labs(title = paste0("Aquinnah - ", .y),
             color = "Pin position") +
        xlab("Date") +
        ylab("Raw pin height (mm)"))
```

::: callout-important
There is a huge jump between the first sampling in 2016 and the next date in 2019 (\~150 mm in total = \~50 mm/yr). Is this right? Typically, salt marshes in the NE have rates somewhere between 1-5 mm/yr. Is there some obvious biological reason for this jump that you know of? If not, I suspect that either a) the SET reader didn't read the ruler properly on the first measurement (they might have read out numbers in the 100s when they should have been in the 200s) or b) there is a data entry error for the first measurement and the values should be in the 200s instead.

See the next sections where I calculated linear rates of change in 2 different ways:

-    With the values from the first date in the 100s - (sections labeled with uncorrected)

-    With 100 mm added to the first date to get the values to be in the 200s - (sections labeled with corrected)
:::

## 4. Calculate station-level cumulative change - uncorrected

```{r}
#| message: false
#| warning: false

aq_cumu <- aq_data %>%
  map(., ~.x %>% 
    group_by(site, station, direction, pin_position) %>%
    mutate(first_pin_height = pin_height[date == min(date[!is.na(pin_height)])]) %>%
    mutate(cumu = pin_height - first_pin_height) %>%
    ungroup() %>%
    group_by(site, station, direction, date) %>%
    summarise(mean_direction_cumu = mean(cumu, na.rm = TRUE)) %>%
    group_by(site, station, date) %>%
    summarise(mean_station_cumu = mean(mean_direction_cumu, na.rm = TRUE),
              se_station_cumu = sd(mean_direction_cumu)/sqrt(length(mean_direction_cumu))) %>%
    mutate(first_date = date[date == min(date[!is.na(mean_station_cumu)])],
           date_num = as.numeric(date - first_date)/365.25))
```

## 5. Calculate station-level linear rates of change - uncorrected

```{r}
#| message: false
#| warning: false

# linear models including all data - uncorrected first date
aq_linear_mod <- aq_cumu %>%
  map(., ~.x %>%
        nest(data = everything()) %>%
        mutate(lm_mod = map(data, ~lm(mean_station_cumu ~ date_num, data = .x)),
               lm_mod_summary = map(lm_mod, ~summary(.x)),
               rate = map_dbl(lm_mod, ~coefficients(.x)[['date_num']]),
               rate_se = map_dbl(lm_mod_summary, ~.$coefficients[['date_num', 'Std. Error']]),
               rate_p = map_dbl(lm_mod_summary, ~.$coefficients[['date_num', 'Pr(>|t|)']]),
               rate_r2 = map_dbl(lm_mod_summary, ~.$r.squared)))

aq_linear_mod_formatted <- aq_linear_mod %>%
  map2(., names(.), ~.x %>%
         mutate(site = "Aquinnah",
                station = .y,
                linear_rate = paste0(round(rate, 2), " mm/yr"),
                SE = paste0("± ", round(rate_se, 2)),
                R2 = format(round(rate_r2, 2), nsmall = 2),
                p_val = format(rate_p, digits = 1)) %>%
         select(station, linear_rate, SE, R2, p_val)) 

aq_linear_mod_formatted %>%
  bind_rows()
```

## 6. Plot station-level cumulative change & rates - uncorrected

Wow those rates are huge - I think something has to be off with the first measurement.

```{r}
#| message: false
#| warning: false

plot_fun <- function(df, rates = NULL, subtitle = NULL) {
  rate_labs <- rates
  
  name_lab <- unique(df$station)
  
  ggplot(data = df, aes(x = date, y = mean_station_cumu)) +
    geom_point() +
    geom_errorbar(aes(x = date, ymin = mean_station_cumu - se_station_cumu, ymax = mean_station_cumu + se_station_cumu)) +
    stat_smooth(method = "lm") +
    geom_text(data = rates, aes(x = as.Date("2017-01-01"), y = Inf, label = paste0("Rate: ", linear_rate, " (", SE, ")\n", "R2: ", R2, ", p: ", p_val)), vjust = 1.5) +
    labs(title = paste0("Aquinnah - ", name_lab),
         subtitle = subtitle) +
    ylab("Cumulative surface elevation change (mm)") +
    xlab("Date")
}

map2(aq_cumu, aq_linear_mod_formatted, ~plot_fun(df = .x, rates = .y, subtitle = "NOTE: initial values uncorrected"))
```

## 7. Calculate station-level cumulative change - corrected

```{r}
#| message: false
#| warning: false

aq_cumu_corrected <- aq_data %>%
  map(., ~.x %>% 
    group_by(site, station, direction, pin_position) %>%
    mutate(pin_height_corrected = if_else(date == min(date), pin_height + 100, pin_height)) %>%
    mutate(first_pin_height = pin_height_corrected[date == min(date[!is.na(pin_height_corrected)])]) %>%
    mutate(cumu = pin_height_corrected - first_pin_height) %>%
    ungroup() %>%
    group_by(site, station, direction, date) %>%
    summarise(mean_direction_cumu = mean(cumu, na.rm = TRUE)) %>%
    group_by(site, station, date) %>%
    summarise(mean_station_cumu = mean(mean_direction_cumu, na.rm = TRUE),
              se_station_cumu = sd(mean_direction_cumu)/sqrt(length(mean_direction_cumu))) %>%
    mutate(first_date = date[date == min(date[!is.na(mean_station_cumu)])],
           date_num = as.numeric(date - first_date)/365.25))
```

## 8. Calculate station-level linear rates of change - corrected

```{r}
#| message: false
#| warning: false

# linear models including all data - corrected first date
aq_linear_mod_corrected <- aq_cumu_corrected %>%
  map(., ~.x %>%
        nest(data = everything()) %>%
        mutate(lm_mod = map(data, ~lm(mean_station_cumu ~ date_num, data = .x)),
               lm_mod_summary = map(lm_mod, ~summary(.x)),
               rate = map_dbl(lm_mod, ~coefficients(.x)[['date_num']]),
               rate_se = map_dbl(lm_mod_summary, ~.$coefficients[['date_num', 'Std. Error']]),
               rate_p = map_dbl(lm_mod_summary, ~.$coefficients[['date_num', 'Pr(>|t|)']]),
               rate_r2 = map_dbl(lm_mod_summary, ~.$r.squared)))

aq_linear_mod_formatted_corrected <- aq_linear_mod_corrected %>%
  map2(., names(.), ~.x %>%
         mutate(site = "Aquinnah",
                station = .y,
                linear_rate = paste0(format(round(rate, 2), nsmall = 2), " mm/yr"),
                SE = paste0("± ", round(rate_se, 2)),
                R2 = format(round(rate_r2, 2), nsmall = 2),
                p_val = format(rate_p, digits = 1)) %>%
         select(station, linear_rate, SE, R2, p_val)) 

aq_linear_mod_formatted_corrected %>%
  bind_rows()
```

## 9. Plot station-level cumulative change & rates - corrected

OK these rates are much more believable.

```{r}
#| message: false
#| warning: false

map2(aq_cumu_corrected, aq_linear_mod_formatted_corrected, ~plot_fun(df = .x, rates = .y, subtitle = "NOTE: initial values corrected"))
```

```{r}
#| eval: false
#| message: false
#| warning: false
#| include: false

# gam models
f<-aq_cumu %>%
  map(., ~.x %>%
        nest(data = everything()) %>%
        mutate(gam_mod = map(data, ~gam(mean_station_cumu ~ s(date_num, k = 5), select = TRUE, method = "REML", data = .x)),
               gam_mod_summary = map(gam_mod, ~summary(.x)),
               derivs = map(gam_mod, ~derivatives(.x, n = 200)),
               rate = map_dbl(derivs, ~mean(.x$.derivative))))
```

```{r}
#| eval: false
#| message: false
#| warning: false
#| include: false
aq_cumu %>%
  map2(., names(.), ~ggplot(data = .x, aes(x = date, y = mean_station_cumu)) +
        geom_point() +
        stat_smooth(method = "gam", formula = y ~ s(x, k = 5), method.args = list(select = TRUE, method = "REML")) +
        labs(title = paste0("Aquinnah - ", .y)) +
        ylab("Cumulative surface elevation change (mm)") +
        xlab("Date") 
         )
```
